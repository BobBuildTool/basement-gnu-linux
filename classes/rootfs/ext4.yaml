inherit: [rootfs]

depends:
    - tools:
        target-toolchain: host-compat-toolchain
      use: [tools]
      depends:
          - utils::e2fsprogs

buildToolsWeak: [e2fsprogs]
buildSetup: |
    # Creates a ext4 image from the root fs source directory. The target image
    # size can be optionally specified. If not, it is automatically calculated.
    #
    # $1: rootfs source directory
    # $2: output name
    # $3: output size (optional)
    #     This can be:
    #     - nothing: auto calc size + head room (18%)
    #     - number:  absolute overall size in kbytes
    #     - number%: percentage in the form of 1.20% to add 20%
    #     - number+: absolute free space in kbytes in the form of 1024+ to add 1MB
    rootfsExt4CreateImage()
    {
        SIZE=${3:-1.18%}
        if [[ $SIZE == *% ]]; then
            # automatic: calc size and add head room/free space in % as specified
            # by the user
            SIZE="\$(dir_size_in_kb $1 ${SIZE%\%})"
        elif [[ $SIZE == *+ ]]; then
            # automatic: calc size and add head room/free space in absolute bytes
            # as specified by the user
            SIZE="\$(dir_size_in_kb $1 1 ${SIZE%\+})"
        fi # default: manually specified

        cat >create_ext4_img.sh <<EOF
    $CREATE_SH_FILE

    # return size of dir in kbytes
    #
    # \$1: source dir
    # \$2: multiply by factor (optional; default 1)
    # \$3: add additional size in kb (optional; default 0)
    function dir_size_in_kb()
    {
        printf %0.f \$(echo "\$(du -xsb -- \$1 | cut -f 1)*\${2:-1}+\${3:-0}*1024" | bc) | numfmt --to-unit=1024
    }

    mkfs.ext4 -d $1 $BOB_CWD/$2.img $SIZE
    EOF

        FAKEROOTDONTTRYCHOWN=1 fakeroot -- sh create_ext4_img.sh
    }
